@page "/filmdetails"
@page "/filmdetails/{id:int}"
@using Model
@using Interfaces
@inject IFilmService FilmService
@inject NavigationManager NavigationManager

<PageTitle>Film - Details</PageTitle>

<RadzenTemplateForm Data="@film">
    <div class="row">
        <div class="col-10">
            <RadzenFieldset Text="Film - Details">
                <div class="row">
                    <div class="col-md-2 align-items-center d-flex">
                        <RadzenLabel Text="Title" />
                    </div>
                    <div class="col-md-6" fieldSpace>
                        <RadzenTextBox Name="Title" @bind-Value="film.Title" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2 align-items-center d-flex">
                        <RadzenLabel Text="Director" />
                    </div>
                    <div class="col-md-6" fieldSpace>
                        <RadzenTextBox Name="Director" @bind-Value="film.Director" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2 align-items-center d-flex">
                        <RadzenLabel Text="Release Date" />
                    </div>
                    <div class="col-md-6" fieldSpace>
                        <RadzenDatePicker @bind-Value="film.ReleaseDate" DateFormat="d"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2 align-items-center d-flex" />
                    <div class="col-md-6" fieldSpace>
                        <RadzenButton Text="Salvar" ButtonStyle="Radzen.ButtonStyle.Primary" Click="@(args => SaveFilm())" />
                        <RadzenButton Text="Cancelar" ButtonStyle="Radzen.ButtonStyle.Secondary" Click="@(args => Cancel())" />
                    </div>
                </div>
            </RadzenFieldset>
        </div>
    </div>
</RadzenTemplateForm>


@code {
    [Parameter]
    public int id {get; set;}

    Film film = new Film();

    protected void Cancel() {
        NavigationManager.NavigateTo("filmlist");
    }

    protected async Task SaveFilm() {
        await FilmService.SaveFilm(film);
        NavigationManager.NavigateTo("filmlist");
    }

    protected override async Task OnInitializedAsync() {
        if (id == 0) {
            film.ReleaseDate = DateTime.Now;
        } else {
            film = await FilmService.GetFilmDetails(id);
        }
    }
}
